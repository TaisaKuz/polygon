void shellSort(int arr[], int n)
{
    // Подбираем первоначальный промежуток. Начинаем с n/2 и уменьшаем его.
    for (int gap = n / 2; gap > 0; gap /= 2) // O(log(n))
    {
        // Выполняем сортировку вставками с разрывом на каждом шаге
        for (int i = gap; i < n; i += 1) // O(n)
        {
            int temp = arr[i];

            int j;
            // Сдвигаем элементы, пока не найдем подходящее место для tempвнутренний цикл может работать O(n) раз в наихудшем случае,
            // но  сложность зависит от текущего значения gap.
            for (j = i; j >= gap && arr[j - gap] > temp; j -= gap)
                arr[j] = arr[j - gap];

            arr[j] = temp;
        }
    }
}

// Асимптотическая сложность:
// Временная сложность: O(n^(3/2)) в наихудшем случае для простых значений gap,
// и O(n log^2 n) в лучших случаях (при оптимальных промежутках).
// Пространственная сложность: O(1), так как мы не используем дополнительных массивов.